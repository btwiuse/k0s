load("@gazelle//:def.bzl", "gazelle")
load("@rules_clojure//:rules.bzl", "clojure_repl")

# TODO: Migrate from rules_docker to rules_oci
# load("@io_bazel_rules_docker//container:container.bzl", "container_push")
# load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@rules_go//go:def.bzl", "go_binary", "go_library", "nogo")

# load("@rules_go//go:def.bzl", "go_binary")

load("@rules_rust//rust:defs.bzl", "rust_binary")

# bazel rule definition
gazelle(
    name = "gazelle",
    #   command = "fix",
    #   prefix = "k0s.io",
)

go_binary(
    name = "k0s",
    embed = ["//cmd/k0s:go_default_library"],
    linkmode = "pie",  # https://github.com/bazelbuild/rules_go/issues/2371
    visibility = ["//visibility:public"],
    x_defs = {
        "github.com/btwiuse/version.GitCommitString": "{STABLE_GitCommitString}",
        "github.com/btwiuse/version.GitTreeStateString": "{STABLE_GitTreeStateString}",
        "github.com/btwiuse/version.GitVersionString": "{STABLE_GitVersionString}",
        "github.com/btwiuse/version.BuildDateString": "{STABLE_BuildDateString}",
    },
)

go_binary(
    name = "k0s_static",
    embed = ["//cmd/k0s:go_default_library"],
    static = "on",
    visibility = ["//visibility:public"],
    x_defs = {
        "github.com/btwiuse/version.GitCommitString": "{STABLE_GitCommitString}",
        "github.com/btwiuse/version.GitTreeStateString": "{STABLE_GitTreeStateString}",
        "github.com/btwiuse/version.GitVersionString": "{STABLE_GitVersionString}",
        "github.com/btwiuse/version.BuildDateString": "{STABLE_BuildDateString}",
    },
)

nogo(
    name = "nogo",
    visibility = ["//visibility:public"],  # must have public visibility
    deps = [
        # analyzer from a remote repository
        # "@org_golang_x_tools//go/analysis/passes/printf:go_tool_library",
    ],
)

# TODO: Migrate from rules_docker to rules_oci
# go_image(
#     name = "k0s_image",
#     base = "@base//image",
#     binary = ":k0s_static",
#     repository = "btwiuse",
# )

# container_push(
#     name = "k0s_image_push",
#     format = "Docker",
#     image = ":k0s_image",
#     registry = "index.docker.io",
#     repository = "btwiuse/k0s",
#     tag = "latest",
# )

rust_binary(
    name = "k0s_rs",
    srcs = ["src/main.rs"],
    edition = "2021",
    visibility = ["//visibility:public"],
    deps = [
        "//cargo:rand",
        "//cargo:serde",
        "//cargo:serde_json",
    ],
)

rust_binary(
    name = "hub_rs",
    srcs = ["src/hub.rs"],
    edition = "2021",
    visibility = ["//visibility:public"],
    deps = [
        "//cargo:actix",
        "//cargo:actix_http",
        "//cargo:actix_rt",
        "//cargo:actix_web",
        "//cargo:actix_web_actors",
        "//cargo:bytes",
        "//cargo:log",
        "//cargo:serde",
        "//cargo:serde_json",
        "//cargo:simple_logger",
    ],
)

rust_binary(
    name = "k8s-controller",
    srcs = ["src/k8s-controller.rs"],
    edition = "2021",
    visibility = ["//visibility:public"],
    deps = [
        "//cargo:serde",
        "//cargo:serde_json",
        # "//cargo:serde_derive",
        "//cargo:kube",
        "//cargo:kube_runtime",
        # "//cargo:kube-derive",
        "//cargo:k8s_openapi",
        "//cargo:schemars",
        "//cargo:tokio",
        "//cargo:futures",
    ],
)

platform(
    name = "windows_386_cgo",
    constraint_values = [
        ":mingw",
    ],
    parents = ["@rules_go//go/toolchain:windows_386_cgo"],
)

platform(
    name = "windows_amd64_cgo",
    constraint_values = [
        ":mingw64",
    ],
    parents = ["@rules_go//go/toolchain:windows_amd64_cgo"],
)

platform(
    name = "android_amd64_cgo",
    constraint_values = [
        ":android_amd64",
    ],
    parents = ["@rules_go//go/toolchain:android_amd64_cgo"],
)

platform(
    name = "android_386_cgo",
    constraint_values = [
        ":android_386",
    ],
    parents = ["@rules_go//go/toolchain:android_386_cgo"],
)

clojure_repl(name = "clj_repl")

# load("@com_github_google_rules_install//installer:def.bzl", "installer")

# installer(
#     name = "install_k0s",
#     data = [":k0s"],
# )

# installer(
#     name = "install_k0s_static",
#     data = [":k0s_static"],
# )

go_library(
    name = "go_default_library",
    srcs = [
        "default.go",
        "types.go",
    ],
    importpath = "k0s.io",
    visibility = ["//visibility:public"],
)
